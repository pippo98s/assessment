!function(n){var e={};function r(t){if(e[t])return e[t].exports;var o=e[t]={i:t,l:!1,exports:{}};return n[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=n,r.c=e,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)r.d(t,o,function(e){return n[e]}.bind(null,o));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="",r(r.s=1)}([function(n,e,r){"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r=function(n,e){var r=n[1]||"",t=n[3];if(!t)return r;if(e&&"function"==typeof btoa){var o=(i=t,c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(d," */")),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[r].concat(a).concat([o]).join("\n")}var i,c,d;return[r].join("\n")}(e,n);return e[2]?"@media ".concat(e[2]," {").concat(r,"}"):r})).join("")},e.i=function(n,r,t){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(t)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);t&&o[d[0]]||(r&&(d[2]?d[2]="".concat(r," and ").concat(d[2]):d[2]=r),e.push(d))}},e}},function(n,e,r){"use strict";r.r(e);r(2);let t=[];let o=document.querySelectorAll("#card-trigger li a[data-sku]");o.forEach(n=>{n.addEventListener("click",()=>{let e=n.getAttribute("data-sku");fetch("https://jsonplaceholder.typicode.com/posts/"+e).then(n=>n.json()).then(n=>{((n,e,r)=>{if(!t.includes(r)){let o=document.getElementById("cards-holder"),i=document.createElement("div");i.setAttribute("class","card"),i.setAttribute("id","card-"+r),i.innerHTML=`\n                    <h3>${n}</h3>\n                    <p>${e}</p>\n                    <a>Remove card</a>\n                   `,o.appendChild(i),document.querySelector(`#card-${r} a`).addEventListener("click",(function(){a(r)})),t.push(r)}})(n.title,n.body,n.id)})})});const a=n=>{document.getElementById("card-"+n).remove();for(let e=0;e<t.length;e++)if(t[e]===n)return void t.splice(e)};document.getElementById("hamburger").addEventListener("click",()=>{document.querySelectorAll("#card-trigger li").forEach(n=>{"active"==n.getAttribute("class")?(n.classList.remove("active"),n.classList.add("none")):(n.classList.remove("none"),n.classList.add("active")),console.log(n),console.log(n.getAttribute("class"))})})},function(n,e,r){var t=r(3),o=r(4);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[n.i,o,""]]);var a={insert:"head",singleton:!1};t(o,a);n.exports=o.locals||{}},function(n,e,r){"use strict";var t,o=function(){return void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t},a=function(){var n={};return function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}n[e]=r}return n[e]}}(),i=[];function c(n){for(var e=-1,r=0;r<i.length;r++)if(i[r].identifier===n){e=r;break}return e}function d(n,e){for(var r={},t=[],o=0;o<n.length;o++){var a=n[o],d=e.base?a[0]+e.base:a[0],l=r[d]||0,s="".concat(d," ").concat(l);r[d]=l+1;var u=c(s),A={css:a[1],media:a[2],sourceMap:a[3]};-1!==u?(i[u].references++,i[u].updater(A)):i.push({identifier:s,updater:m(A,e),references:1}),t.push(s)}return t}function l(n){var e=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var o=r.nc;o&&(t.nonce=o)}if(Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(e);else{var i=a(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}return e}var s,u=(s=[],function(n,e){return s[n]=e,s.filter(Boolean).join("\n")});function A(n,e,r,t){var o=r?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=u(e,o);else{var a=document.createTextNode(o),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(a,i[e]):n.appendChild(a)}}function p(n,e,r){var t=r.css,o=r.media,a=r.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var f=null,C=0;function m(n,e){var r,t,o;if(e.singleton){var a=C++;r=f||(f=l(e)),t=A.bind(null,r,a,!1),o=A.bind(null,r,a,!0)}else r=l(e),t=p.bind(null,r,e),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)};return t(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t(n=e)}else o()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=o());var r=d(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<r.length;t++){var o=c(r[t]);i[o].references--}for(var a=d(n,e),l=0;l<r.length;l++){var s=c(r[l]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}r=a}}}},function(n,e,r){"use strict";r.r(e);var t=r(0),o=r.n(t)()(!0);o.push([n.i,"*{margin:0;padding:0;box-sizing:border-box}.active{display:block}.none{display:none}@media screen and (min-width: 425px){.none{display:null}}body{text-align:center;background-color:#fff}body a#hamburger{width:40px;height:40px;display:inline-block;margin-top:40px}@media screen and (min-width: 425px){body a#hamburger{display:none}}body a#hamburger img{max-width:100%}body ul{list-style-type:none;margin:20px auto}body ul li{margin:10px 0;padding:10px 20px;border-radius:5px;background-color:yellow;display:inline-block}@media screen and (max-width: 425px){body ul li{display:none}}body a{color:inherit;text-decoration:none}body #cards-holder{margin:20px;display:flex;justify-content:space-around;flex-wrap:wrap}body #cards-holder .card{width:300px;padding:10px;margin:20px 0;background-color:#1a5cff;border-radius:5px;text-align:left}body #cards-holder .card h3,body #cards-holder .card p{text-transform:capitalize;margin:10px 0}body #cards-holder .card p{color:#fff}body #cards-holder .card a{width:max-content;margin:auto;display:block;padding:3px 10px;border-radius:5px;background-color:lawngreen;cursor:pointer}\n","",{version:3,sources:["webpack://src/styles/main.scss"],names:[],mappings:"AAAA,EACE,QAAS,CACT,SAAU,CACV,qBAAsB,CACvB,QAGC,aAAc,CACf,MAGC,YAAa,CACb,qCAFF,MAGM,YAAa,CAElB,CAED,KACE,iBAAkB,CAClB,qBAAsB,CAFxB,iBAII,UAAW,CACX,WAAY,CACZ,oBAAqB,CACrB,eAAgB,CAChB,qCARJ,iBASM,YAAa,CAKhB,CAdH,qBAYM,cAAe,CAZrB,QAgBI,oBAAqB,CACrB,gBAAiB,CAjBrB,WAmBM,aAAc,CACd,iBAAkB,CAClB,iBAAkB,CAClB,uBAAwB,CACxB,oBAAsB,CACtB,qCAxBN,WAyBQ,YAAa,CAEhB,CA3BL,OA8BI,aAAc,CACd,oBAAqB,CA/BzB,mBAmCI,WAAY,CACZ,YAAa,CACb,4BAA6B,CAC7B,cAAe,CAtCnB,yBAwCM,WAAY,CACZ,YAAa,CACb,aAAc,CACd,wBAAyB,CACzB,iBAAkB,CAClB,eAAgB,CA7CtB,uDA+CQ,yBAA0B,CAC1B,aAAc,CAhDtB,2BAmDQ,UAAW,CAnDnB,2BAsDQ,iBAAkB,CAClB,WAAY,CACZ,aAAc,CACd,gBAAiB,CACjB,iBAAkB,CAClB,0BAA2B,CAC3B,cAAe",sourcesContent:["*{\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.active{\r\n  display: block;\r\n}\r\n\r\n.none{\r\n  display: none;\r\n  @media screen and (min-width: 425px){\r\n      display: null;\r\n  }\r\n}\r\n\r\nbody{\r\n  text-align: center;\r\n  background-color: #fff;\r\n  a#hamburger {\r\n    width: 40px;\r\n    height: 40px;\r\n    display: inline-block;\r\n    margin-top: 40px;\r\n    @media screen and (min-width: 425px){\r\n      display: none;\r\n    }\r\n    img{\r\n      max-width: 100%;\r\n    }\r\n  }\r\n  ul{\r\n    list-style-type: none;\r\n    margin: 20px auto;\r\n    li{\r\n      margin: 10px 0;\r\n      padding: 10px 20px;\r\n      border-radius: 5px;\r\n      background-color: yellow;\r\n      display: inline-block ;\r\n      @media screen and (max-width: 425px){\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n  a{\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n\r\n  #cards-holder{\r\n    margin: 20px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-wrap: wrap;\r\n    .card{\r\n      width: 300px;\r\n      padding: 10px;\r\n      margin: 20px 0;\r\n      background-color: #1a5cff;\r\n      border-radius: 5px;\r\n      text-align: left;\r\n      h3,p{\r\n        text-transform: capitalize;\r\n        margin: 10px 0;\r\n      }\r\n      p{\r\n        color: #fff;\r\n      }\r\n      a{\r\n        width: max-content;\r\n        margin: auto;\r\n        display: block;\r\n        padding: 3px 10px;\r\n        border-radius: 5px;\r\n        background-color: lawngreen;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n"],sourceRoot:""}]),e.default=o}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9tYWluLnNjc3M/NjljNyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9tYWluLnNjc3MiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwiY29uY2F0Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwiam9pbiIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsImlkIiwiX2kiLCJwdXNoIiwicG9zdHNJZEhvbGRlciIsInBvc3RzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsInBvc3QiLCJhZGRFdmVudExpc3RlbmVyIiwiUG9zdE51bWJlciIsImdldEF0dHJpYnV0ZSIsImZldGNoIiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsInRpdGxlIiwiYm9keSIsImlkbiIsImluY2x1ZGVzIiwiY29udGFpbmVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJjYXJkIiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImlubmVySFRNTCIsImFwcGVuZENoaWxkIiwicXVlcnlTZWxlY3RvciIsInJlbW92ZUNhcmQiLCJhZGRQb3N0IiwicmVtb3ZlIiwic3BsaWNlIiwiY2xhc3NMaXN0IiwiYWRkIiwiY29uc29sZSIsImxvZyIsImFwaSIsImRlZmF1bHQiLCJvcHRpb25zIiwibG9jYWxzIiwibWVtbyIsImlzT2xkSUUiLCJCb29sZWFuIiwid2luZG93IiwiYWxsIiwiYXRvYiIsImdldFRhcmdldCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXgiLCJvYmoiLCJjc3MiLCJtZWRpYSIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImF0dHJpYnV0ZXMiLCJub25jZSIsImtleXMiLCJpbnNlcnQiLCJFcnJvciIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjaGlsZE5vZGVzIiwicmVtb3ZlQ2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJhcHBseVRvVGFnIiwicmVtb3ZlQXR0cmlidXRlIiwiZmlyc3RDaGlsZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicGFyZW50Tm9kZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFAsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEtBUXZEckIsRUFBb0Jz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QUFZdEIsT0FBT3NFLEVBQVEsSUFJL0JILEVBQWtCRSxNLDZCQzFRdEIsa0JBRUlFLEVBRkosTUFFOEIsSUFBNEIsR0FFMURBLEVBQXdCcEcsS0FBSyxDQUFDL0QsRUFBT0MsRUFBSSxnbUNBQWltQyxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyxrQ0FBa0MsTUFBUSxHQUFHLFNBQVcsNm9CQUE2b0IsZUFBaUIsQ0FBQywrbURBQSttRCxXQUFhLE1BRXorRyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEpO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG5cbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgJycpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gIHJldHVybiBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG59IiwiaW1wb3J0ICcuL3N0eWxlcy9tYWluLnNjc3MnOyBcclxuLy8gYGBcclxuXHJcbmxldCBwb3N0c0lkSG9sZGVyID0gW11cclxuY29uc3QgYWRkUG9zdCA9ICh0aXRsZSAsIGJvZHkgLCBpZG4pID0+e1xyXG4gIGlmKCFwb3N0c0lkSG9sZGVyLmluY2x1ZGVzKGlkbikpe1xyXG4gICAgbGV0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FyZHMtaG9sZGVyXCIpXHJcbiAgICBsZXQgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIilcclxuICAgIGNhcmQuc2V0QXR0cmlidXRlKCdjbGFzcycsICdjYXJkJylcclxuICAgIGNhcmQuc2V0QXR0cmlidXRlKCdpZCcsIGBjYXJkLSR7aWRufWApXHJcbiAgICBjYXJkLmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgICAgICAgICA8aDM+JHt0aXRsZX08L2gzPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwPiR7Ym9keX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPGE+UmVtb3ZlIGNhcmQ8L2E+XHJcbiAgICAgICAgICAgICAgICAgICBgXHJcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoY2FyZClcclxuICAgIGxldCByZW1vdmVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjY2FyZC0ke2lkbn0gYWApXHJcbiAgICByZW1vdmVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpe1xyXG4gICAgICByZW1vdmVDYXJkKGlkbilcclxuICAgIH0pXHJcbiAgICBwb3N0c0lkSG9sZGVyLnB1c2goaWRuKVxyXG4gIH1cclxufVxyXG5cclxuY29uc3QgY2FsbEFwaSA9IGFycmF5ID0+e1xyXG4gIGFycmF5LmZvckVhY2gocG9zdCA9PiB7XHJcbiAgICBwb3N0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICBsZXQgUG9zdE51bWJlciA9IHBvc3QuZ2V0QXR0cmlidXRlKFwiZGF0YS1za3VcIik7XHJcbiAgICAgIGZldGNoKGBodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvJHtQb3N0TnVtYmVyfWApXHJcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgbGV0IHRpdGxlID0gZGF0YS50aXRsZVxyXG4gICAgICAgICAgbGV0IGJvZHkgPSBkYXRhLmJvZHlcclxuICAgICAgICAgIGxldCBpZG4gPSBkYXRhLmlkXHJcbiAgICAgICAgICBhZGRQb3N0KHRpdGxlLCBib2R5LCBpZG4pXHJcbiAgICAgICAgfSk7XHJcbiAgICB9KVxyXG4gIH0pXHJcbn1cclxuXHJcbmxldCBwb3N0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjY2FyZC10cmlnZ2VyIGxpIGFbZGF0YS1za3VdXCIpO1xyXG5jYWxsQXBpKHBvc3RzKVxyXG5cclxuY29uc3QgcmVtb3ZlQ2FyZCA9IGlkID0+IHtcclxuICBsZXQgY2FyZEVsaW1pbmF0ZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgY2FyZC0ke2lkfWApXHJcbiAgY2FyZEVsaW1pbmF0ZWQucmVtb3ZlKClcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IHBvc3RzSWRIb2xkZXIubGVuZ3RoOyBpKyspIHtcclxuICAgIGlmIChwb3N0c0lkSG9sZGVyW2ldID09PSBpZCl7XHJcbiAgICAgIHBvc3RzSWRIb2xkZXIuc3BsaWNlKGkpXHJcbiAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxubGV0IGhhbWJ1cmdlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaGFtYnVyZ2VyXCIpXHJcbmhhbWJ1cmdlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycgLCAoKT0+e1xyXG4gIGxldCBwb3N0c0VsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI2NhcmQtdHJpZ2dlciBsaVwiKTtcclxuICBwb3N0c0VsZW1lbnQuZm9yRWFjaChwb3N0ID0+e1xyXG4gICAgaWYgKHBvc3QuZ2V0QXR0cmlidXRlKCdjbGFzcycpID09ICdhY3RpdmUnKXtcclxuICAgICAgcG9zdC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxyXG4gICAgICBwb3N0LmNsYXNzTGlzdC5hZGQoJ25vbmUnKVxyXG4gICAgfSBlbHNle1xyXG4gICAgICBwb3N0LmNsYXNzTGlzdC5yZW1vdmUoJ25vbmUnKVxyXG4gICAgICBwb3N0LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpXHJcbiAgICB9XHJcbiAgICBjb25zb2xlLmxvZyhwb3N0KTtcclxuICAgIGNvbnNvbGUubG9nKHBvc3QuZ2V0QXR0cmlidXRlKCdjbGFzcycpKTtcclxuICB9KVxyXG59KSIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIip7bWFyZ2luOjA7cGFkZGluZzowO2JveC1zaXppbmc6Ym9yZGVyLWJveH0uYWN0aXZle2Rpc3BsYXk6YmxvY2t9Lm5vbmV7ZGlzcGxheTpub25lfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQyNXB4KXsubm9uZXtkaXNwbGF5Om51bGx9fWJvZHl7dGV4dC1hbGlnbjpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZmZmfWJvZHkgYSNoYW1idXJnZXJ7d2lkdGg6NDBweDtoZWlnaHQ6NDBweDtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tdG9wOjQwcHh9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDI1cHgpe2JvZHkgYSNoYW1idXJnZXJ7ZGlzcGxheTpub25lfX1ib2R5IGEjaGFtYnVyZ2VyIGltZ3ttYXgtd2lkdGg6MTAwJX1ib2R5IHVse2xpc3Qtc3R5bGUtdHlwZTpub25lO21hcmdpbjoyMHB4IGF1dG99Ym9keSB1bCBsaXttYXJnaW46MTBweCAwO3BhZGRpbmc6MTBweCAyMHB4O2JvcmRlci1yYWRpdXM6NXB4O2JhY2tncm91bmQtY29sb3I6eWVsbG93O2Rpc3BsYXk6aW5saW5lLWJsb2NrfUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KXtib2R5IHVsIGxpe2Rpc3BsYXk6bm9uZX19Ym9keSBhe2NvbG9yOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Ym9keSAjY2FyZHMtaG9sZGVye21hcmdpbjoyMHB4O2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kO2ZsZXgtd3JhcDp3cmFwfWJvZHkgI2NhcmRzLWhvbGRlciAuY2FyZHt3aWR0aDozMDBweDtwYWRkaW5nOjEwcHg7bWFyZ2luOjIwcHggMDtiYWNrZ3JvdW5kLWNvbG9yOiMxYTVjZmY7Ym9yZGVyLXJhZGl1czo1cHg7dGV4dC1hbGlnbjpsZWZ0fWJvZHkgI2NhcmRzLWhvbGRlciAuY2FyZCBoMyxib2R5ICNjYXJkcy1ob2xkZXIgLmNhcmQgcHt0ZXh0LXRyYW5zZm9ybTpjYXBpdGFsaXplO21hcmdpbjoxMHB4IDB9Ym9keSAjY2FyZHMtaG9sZGVyIC5jYXJkIHB7Y29sb3I6I2ZmZn1ib2R5ICNjYXJkcy1ob2xkZXIgLmNhcmQgYXt3aWR0aDptYXgtY29udGVudDttYXJnaW46YXV0bztkaXNwbGF5OmJsb2NrO3BhZGRpbmc6M3B4IDEwcHg7Ym9yZGVyLXJhZGl1czo1cHg7YmFja2dyb3VuZC1jb2xvcjpsYXduZ3JlZW47Y3Vyc29yOnBvaW50ZXJ9XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9zdHlsZXMvbWFpbi5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLEVBQ0UsUUFBUyxDQUNULFNBQVUsQ0FDVixxQkFBc0IsQ0FDdkIsUUFHQyxhQUFjLENBQ2YsTUFHQyxZQUFhLENBQ2IscUNBRkYsTUFHTSxZQUFhLENBRWxCLENBRUQsS0FDRSxpQkFBa0IsQ0FDbEIscUJBQXNCLENBRnhCLGlCQUlJLFVBQVcsQ0FDWCxXQUFZLENBQ1osb0JBQXFCLENBQ3JCLGVBQWdCLENBQ2hCLHFDQVJKLGlCQVNNLFlBQWEsQ0FLaEIsQ0FkSCxxQkFZTSxjQUFlLENBWnJCLFFBZ0JJLG9CQUFxQixDQUNyQixnQkFBaUIsQ0FqQnJCLFdBbUJNLGFBQWMsQ0FDZCxpQkFBa0IsQ0FDbEIsaUJBQWtCLENBQ2xCLHVCQUF3QixDQUN4QixvQkFBc0IsQ0FDdEIscUNBeEJOLFdBeUJRLFlBQWEsQ0FFaEIsQ0EzQkwsT0E4QkksYUFBYyxDQUNkLG9CQUFxQixDQS9CekIsbUJBbUNJLFdBQVksQ0FDWixZQUFhLENBQ2IsNEJBQTZCLENBQzdCLGNBQWUsQ0F0Q25CLHlCQXdDTSxXQUFZLENBQ1osWUFBYSxDQUNiLGFBQWMsQ0FDZCx3QkFBeUIsQ0FDekIsaUJBQWtCLENBQ2xCLGVBQWdCLENBN0N0Qix1REErQ1EseUJBQTBCLENBQzFCLGFBQWMsQ0FoRHRCLDJCQW1EUSxVQUFXLENBbkRuQiwyQkFzRFEsaUJBQWtCLENBQ2xCLFdBQVksQ0FDWixhQUFjLENBQ2QsZ0JBQWlCLENBQ2pCLGlCQUFrQixDQUNsQiwwQkFBMkIsQ0FDM0IsY0FBZVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqe1xcclxcbiAgbWFyZ2luOiAwO1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxufVxcclxcblxcclxcbi5hY3RpdmV7XFxyXFxuICBkaXNwbGF5OiBibG9jaztcXHJcXG59XFxyXFxuXFxyXFxuLm5vbmV7XFxyXFxuICBkaXNwbGF5OiBub25lO1xcclxcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDI1cHgpe1xcclxcbiAgICAgIGRpc3BsYXk6IG51bGw7XFxyXFxuICB9XFxyXFxufVxcclxcblxcclxcbmJvZHl7XFxyXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcclxcbiAgYSNoYW1idXJnZXIge1xcclxcbiAgICB3aWR0aDogNDBweDtcXHJcXG4gICAgaGVpZ2h0OiA0MHB4O1xcclxcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxyXFxuICAgIG1hcmdpbi10b3A6IDQwcHg7XFxyXFxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQyNXB4KXtcXHJcXG4gICAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICB9XFxyXFxuICAgIGltZ3tcXHJcXG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XFxyXFxuICAgIH1cXHJcXG4gIH1cXHJcXG4gIHVse1xcclxcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxyXFxuICAgIG1hcmdpbjogMjBweCBhdXRvO1xcclxcbiAgICBsaXtcXHJcXG4gICAgICBtYXJnaW46IDEwcHggMDtcXHJcXG4gICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxyXFxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcXHJcXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgO1xcclxcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KXtcXHJcXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxuICAgICAgfVxcclxcbiAgICB9XFxyXFxuICB9XFxyXFxuICBhe1xcclxcbiAgICBjb2xvcjogaW5oZXJpdDtcXHJcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcclxcbiAgfVxcclxcblxcclxcbiAgI2NhcmRzLWhvbGRlcntcXHJcXG4gICAgbWFyZ2luOiAyMHB4O1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgZmxleC13cmFwOiB3cmFwO1xcclxcbiAgICAuY2FyZHtcXHJcXG4gICAgICB3aWR0aDogMzAwcHg7XFxyXFxuICAgICAgcGFkZGluZzogMTBweDtcXHJcXG4gICAgICBtYXJnaW46IDIwcHggMDtcXHJcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWE1Y2ZmO1xcclxcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbiAgICAgIGgzLHB7XFxyXFxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcXHJcXG4gICAgICAgIG1hcmdpbjogMTBweCAwO1xcclxcbiAgICAgIH1cXHJcXG4gICAgICBwe1xcclxcbiAgICAgICAgY29sb3I6ICNmZmY7XFxyXFxuICAgICAgfVxcclxcbiAgICAgIGF7XFxyXFxuICAgICAgICB3aWR0aDogbWF4LWNvbnRlbnQ7XFxyXFxuICAgICAgICBtYXJnaW46IGF1dG87XFxyXFxuICAgICAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgICAgIHBhZGRpbmc6IDNweCAxMHB4O1xcclxcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGF3bmdyZWVuO1xcclxcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgICAgIH1cXHJcXG4gICAgfVxcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==